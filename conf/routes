# Swagger UI
GET     /                          controllers.Assets.at(path="/public/swagger", file="index.html")
GET     /swagger.json                   controllers.ApiHelpController.getResources

# Blocks

GET     /api/block/stats                org.tronscan.api.BlockApi.stats
GET     /api/block                      org.tronscan.api.BlockApi.findAll
GET     /api/block/latest               org.tronscan.api.BlockApi.latest
GET     /api/block/:id                  org.tronscan.api.BlockApi.findById(id: Long)

# Transfers

GET     /api/transfer                   org.tronscan.api.TransferApi.findAll
GET     /api/transfer/stats             org.tronscan.api.TransferApi.stats
GET     /api/transfer/:hash             org.tronscan.api.TransferApi.findByHash(hash: String)

# Transactions

GET     /api/transaction                org.tronscan.api.TransactionApi.findAll
POST    /api/transaction                org.tronscan.api.TransactionApi.create
GET     /api/transaction/:hash          org.tronscan.api.TransactionApi.findByHash(hash: String)

# Account

POST    /api/account                    org.tronscan.api.AccountApi.create
GET     /api/account                    org.tronscan.api.AccountApi.findAll
GET     /api/account/richlist           org.tronscan.api.AccountApi.richList
GET     /api/account/:address           org.tronscan.api.AccountApi.findByAddress(address: String)
GET     /api/account/:address/media     org.tronscan.api.AccountApi.getInfo(address: String)
GET     /api/account/:address/balance   org.tronscan.api.AccountApi.getAddressBalance(address: String)
GET     /api/account/:address/stats     org.tronscan.api.AccountApi.getStats(address: String)
GET     /api/account/:address/votes     org.tronscan.api.AccountApi.getVotes(address: String)
GET     /api/account/:address/sr        org.tronscan.api.AccountApi.getSr(address: String)
GET     /api/account/:address/sr-pages  org.tronscan.api.AccountApi.getSrPages(address: String)
POST    /api/account/:address/sr        org.tronscan.api.AccountApi.updateSr(address: String)

# Fund

GET     /api/fund                       org.tronscan.api.FundsApi.findAll

# Node

GET     /api/node                               org.tronscan.api.NodeApi.status

# System

GET     /api/system/status                      org.tronscan.api.SystemApi.status
GET     /api/system/sync-accounts               org.tronscan.api.AccountApi.resync
GET     /api/system/sync-account/:address       org.tronscan.api.AccountApi.sync(address: String)

# Votes

GET     /api/vote                       org.tronscan.api.VoteApi.findAll
GET     /api/vote/live                  org.tronscan.api.VoteApi.currentCycle
GET     /api/vote/current-cycle         org.tronscan.api.VoteApi.candidateTotals
GET     /api/vote/next-cycle            org.tronscan.api.VoteApi.nextCycle
GET     /api/vote/stats                 org.tronscan.api.VoteApi.stats

# Tokens

GET     /api/token                      org.tronscan.api.TokenApi.findAll
GET     /api/token/:name                org.tronscan.api.TokenApi.findByName(name: String)
GET     /api/token/:name/address        org.tronscan.api.TokenApi.getAccounts(name: String)

# Witnesses

GET     /api/witness                    org.tronscan.api.WitnessApi.findAll
GET     /api/witness/maintenance-statistic         org.tronscan.api.WitnessApi.maintenanceStatistic

# Nodes

GET     /api/nodemap                    org.tronscan.api.WitnessApi.getNodeMap

# Markets

GET     /api/market/markets             org.tronscan.api.MarketApi.markets

# Auth

POST    /api/auth                       org.tronscan.api.AuthApi.requestToken

# Testnet

POST    /api/testnet/request-coins      org.tronscan.api.TestNetApi.requestTrx

# Stats

GET     /api/stats/overview             org.tronscan.api.StatsApi.overview

# Slack

POST    /api/slack/command              org.tronscan.slack.SlackApi.handleCommand

# GRPC Full Node Api

GET     /api/grpc/full/getnowblock                  org.tronscan.api.GrpcFullApi.getNowBlock
GET     /api/grpc/full/getblockbynum/:number        org.tronscan.api.GrpcFullApi.getBlockByNum(number: Long)
GET     /api/grpc/full/totaltransaction             org.tronscan.api.GrpcFullApi.totalTransaction
GET     /api/grpc/full/getaccount/:address          org.tronscan.api.GrpcFullApi.getAccount(address: String)
GET     /api/grpc/full/gettransactionbyid/:hash     org.tronscan.api.GrpcFullApi.getTransactionById(hash: String)
GET     /api/grpc/full/getaccountnet/:address       org.tronscan.api.GrpcFullApi.getAccountNet(address: String)
GET     /api/grpc/full/listnodes                    org.tronscan.api.GrpcFullApi.listNodes
GET     /api/grpc/full/listwitnesses                org.tronscan.api.GrpcFullApi.listWitnesses

# GRPC Solidity API

GET     /api/grpc/solidity/getnowblock                  org.tronscan.api.GrpcSolidityApi.getNowBlock
GET     /api/grpc/solidity/getblockbynum/:number        org.tronscan.api.GrpcSolidityApi.getBlockByNum(number: Long)
GET     /api/grpc/solidity/getaccount/:address          org.tronscan.api.GrpcSolidityApi.getAccount(address: String)
GET     /api/grpc/solidity/listwitnesses                org.tronscan.api.GrpcSolidityApi.listWitnesses

# Transaction Builder

POST    /api/transaction-builder/contract/transfer              org.tronscan.api.TransactionBuilderApi.transfer
POST    /api/transaction-builder/contract/transferasset         org.tronscan.api.TransactionBuilderApi.transferAsset
POST    /api/transaction-builder/contract/accountcreate         org.tronscan.api.TransactionBuilderApi.accountCreate
POST    /api/transaction-builder/contract/accountupdate         org.tronscan.api.TransactionBuilderApi.accountUpdate
POST    /api/transaction-builder/contract/withdrawbalance       org.tronscan.api.TransactionBuilderApi.withdrawBalance

# Socket IO

GET     /socket.io/                     play.engineio.EngineIOController.endpoint(transport)
POST    /socket.io/                     play.engineio.EngineIOController.endpoint(transport)

# Map static resources from the /public folder to the /assets URL path

GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)
